Kubernetes:- It manages all the containers by providing cluster/Orchestration among them. 
=========    Monitoring, scailing, High Availability, Disastor recovery,  networking, load balancing, contorlling & Deploying an app in container, all these can be done by Kubernetes.
             If any container goes down, Immidiatly will restrat new container. If Complete node gets killed, Immdiatly it will shift the traffic on to other Node.
             It automatically takes care of Rollout & Rollback to avoide the downtime.
     
Componant:- a.) Secreate
            b.) Config Maps
     
Features:- i.) Automatic Bin Packing.
          ii.) Service Descovery & Load Balancing
         iii.) Storage Orchestartion
          iv.) Self-Healing
    
 
Container >>> Pods >>> Worker Nodes(ec2) >>> Cluster
    

Cluster:- Its a collection of machines called node. Every cluster will have one Master Node & One Worker Node atleast.
          

Conainer:- It's an isolated space where you can deploy & run your application. It is compatible with all OS like:- Mac, Windows & Linux
           limit 300000 in a custer.

Pods:- Collection of containers. It could have one or more container. It gets it's own IP address. So with this internal IP address only , Pods can connect to each other. 
       Multiple Pods can be run in parallaer & can scale up as well.   
       Limit is 15000 in a cluster.
       Pods gets new IP assigned on it's  re-creation. So the Drawback is everytime you need to change your Application container IP to communicate with DB IP, To avoide this issue, K8S has come up with 'Service' solutions.

Service:- It's like a Static/Permanant IP Address which attach to each Pods. Also, Service is not dependent on Pods lifecycle, Means if Pods gets shutdown & new Pods provision that time IP Address  will not change becaue of Service endpoint. So , your Application container can communicate to DB container without any disruption. 
          Type:- a.) External service:- For Web container & Application Container used & can be accesible through internet browser/url by Ingress. ex:- http://node1IPadd:8080
                 b.) Internal Service:- Used for DB container & can be accesible through internet browser/url by using Ingress(security Group in AWS).


Nodes:- Node could be a physical or Virtual Machine or EC2. Node will act like either Master or Worker. 
        Worker Node is a Collection of Pods. It could have one or more Pods. Worker Nodes have application running container. 
        Master node manages both Worker Node & Pods. If there's any fail over in Node , so it immidiatly shift the traffic on other worker node.
        Limit is upto 5000 in a cluster. In a Node, you can have only 100 Pods.


Master Node Componant:- If you lose the master node than you can not access the cluster anymore. So , you should have atleast two master node in production.
                        a.) API server :- It is also a container. It's an EntryPoint to K8S cluster on which different K8S client can talk to  ex:- UI Dashboard, Script (api) or CLI (Kubectl).
                        
                        b.) Scheduler:- It Shedules the next container in same/different Worker Node, based on the resource availabiity & the work load it carries.
                        
                        c.) Control Manager:- it tracks, what is happning inside the cluster. Like if container dies or node goes down these info it keeps.
                        
                        d.) etcd:- It has all the configuration data like cluster state, container state, node state & etc. Back & restore of whole cluster state can be perfomed based on 'etcd snapshot' only because it keeps status.


Worker Node Componant:- a.) Kubelet:- It's an agent/utility which runs on Worker node which communicate with Master Node through API server.
                                  It gets the Pods info from PodSpecs to make sure that Pods are running fine, if Pods doesn't work fine than it will restart the Pods on Same Node or different Node.
                                  Kubelet only manage those containers which are created by K8S.
                                  
                        b.) Kube-Proxy:- It's a network configuration which runs on every nodes.
                        
                        C.) Container Runtime:- It is responsible for running container inside the Pod.


Virtual Network :- Master node container can communicate to Worker node container wih the help of Virtual Network.



                                                  Virtual Network             
           Worker Node (kubelet Agent) ---------------------------------> (API server) Master Node


Config Map :- It contains configuration data like DB url or other application URL.Pods gets the data from config map only. You can modify config map based on the requirement.
               ex:- DB_URL = mongo-db


Secret:- Secreat is like a Config map but it stores sensitive data like credentials, password & ceritificates which are encoded with base64 instead off plain text file.




### K8S Volume Or Storage:- If you retstart the Pod, your all data will go away because K8S doesn't manage Data persistance . To avoide this, we can either attache the local machine or remote storage (cloud) to the Pod.
=========================== It's like a external hard-drive.


Replication Controller (rc or rcs):- It makes sure that at any cost these or that numbers of Pods should be existed. If Pods failes than immidiatly it can be replaced.
                         Replication controller gets info from Manifest file about how many container has to be run.
                         
  
Manifest File:- it Contains how many Pods should be available & than it tells to replications controller to maintain the desire no. of Pods.


## K8S Online for Practice:-
--------------------------

1.) Kubrnetes Playground by Katacoda is a website where you don;t have to install anything & can practice k8S online.

2.) Play with K8S

3.) Play with Kubernetes Classroom








## Interview Questions & Answeres
====================================

Q.) Secreat in K8S?
A.) Secreat is like a Config map but it containes sensitive data like credentials which are encoded with base64 instead off plain text file.





